name: CI

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

permissions:
    contents: read
    security-events: write
    actions: read
    pull-requests: read

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    NODE_VERSION: "20"
    PNPM_VERSION: "8"

jobs:
    pre-check:
        name: Pre-check
        runs-on: ubuntu-latest
        outputs:
            should-run: ${{ steps.check.outputs.should-run }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Check if should run CI
              id: check
              run: |
                  # Skip CI for documentation-only changes
                  if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.(md|txt)$' | wc -l | grep -q '^[0-9]*$' && \
                     ! git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -v -E '\.(md|txt)$' | head -1; then
                      echo "should-run=false" >> $GITHUB_OUTPUT
                  else
                      echo "should-run=true" >> $GITHUB_OUTPUT
                  fi

    # Lint and type checking with matrix strategy for multiple Node versions
    lint-and-type-check:
        name: Lint and Type Check (Node ${{ matrix.node-version }})
        runs-on: ubuntu-latest
        needs: pre-check
        if: needs.pre-check.outputs.should-run == 'true'
        strategy:
            matrix:
                node-version: [18, 20]
            fail-fast: false
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: "https://registry.npmjs.org"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile --prefer-offline

            - name: Type check
              run: pnpm run tslint

            - name: Lint
              run: pnpm run lint

    codeql:
        name: CodeQL Analysis
        runs-on: ubuntu-latest
        needs: pre-check
        if: needs.pre-check.outputs.should-run == 'true'
        permissions:
            actions: read
            contents: read
            security-events: write
        strategy:
            fail-fast: false
            matrix:
                language: ["javascript-typescript"]
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Initialize CodeQL
              uses: github/codeql-action/init@v3
              with:
                  languages: ${{ matrix.language }}
                  queries: security-extended,security-and-quality
                  config: |
                      name: "CodeQL Config"
                      queries:
                          - uses: security-extended
                          - uses: security-and-quality

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install dependencies
              run: pnpm install --frozen-lockfile --prefer-offline

            - name: Build for CodeQL
              run: pnpm run build

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
              with:
                  category: "/language:${{ matrix.language }}"

    dependency-review:
        name: Dependency Review
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        permissions:
            contents: read
            pull-requests: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Dependency Review
              uses: actions/dependency-review-action@v4
              with:
                  fail-on-severity: moderate
                  allow-licenses: MIT, ISC, Apache-2.0, BSD-2-Clause, BSD-3-Clause, 0BSD
                  comment-summary-in-pr: always

    security-audit:
        name: Security Audit
        runs-on: ubuntu-latest
        needs: pre-check
        if: needs.pre-check.outputs.should-run == 'true'
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install dependencies
              run: pnpm install --frozen-lockfile --prefer-offline

            - name: Run security audit
              run: pnpm audit --audit-level moderate
